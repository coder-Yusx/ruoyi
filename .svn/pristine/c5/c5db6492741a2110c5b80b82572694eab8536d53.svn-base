package com.ruoyi.web.controller.baseclean;

import com.ruoyi.baseclean.domain.ColClean;
import com.ruoyi.baseclean.domain.TDataBinding;
import com.ruoyi.baseclean.domain.TableClean;
import com.ruoyi.baseclean.service.ITableCleanService;
import com.ruoyi.basp.domain.DjGgQlrmx;
import com.ruoyi.basp.service.IDjGgQlrmxService;
import com.ruoyi.common.annotation.Log;
import com.ruoyi.common.core.controller.BaseController;
import com.ruoyi.common.core.domain.AjaxResult;
import com.ruoyi.common.core.page.TableDataInfo;
import com.ruoyi.common.enums.BusinessType;
import com.ruoyi.common.utils.StringUtils;
import com.ruoyi.framework.util.ShiroUtils;
import com.ruoyi.system.domain.SysPerson;
import com.ruoyi.system.domain.SysRole;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/baseclean/tableclean")
public class TableCleanController extends BaseController {

    @Autowired
    private ITableCleanService tableCleanService;

    private String prefix = "baseclean/tableclean";

    @RequiresPermissions("baseclean:tableclean:view")
    @GetMapping()
    public String tableClean()
    {
        return prefix + "/tableclean";
    }

    /**
     * 查询权利人明细_簿载层列表
     */
    @RequiresPermissions("baseclean:tableclean:list")
    @PostMapping("/list")
    @ResponseBody
    public TableDataInfo list(TableClean tableClean)
    {
        startPage();
        List<TableClean> list = tableCleanService.selectTableByUser(tableClean);
        return getDataTable(list);
    }

    @GetMapping("/tocol/{tableName}/{owner}")
    public String toColClean(@PathVariable("tableName") String tableName,@PathVariable("owner") String owner, ModelMap mmap)
    {
        ColClean colClean = new ColClean();
        colClean.setTableName(tableName);
        colClean.setOwner(owner);
        mmap.put("colClean", colClean);
        return prefix + "/colclean";
    }

    @PostMapping("/listCols")
    @ResponseBody
    public TableDataInfo listCols(ColClean colClean)
    {
        startPage();
        List<ColClean> list = tableCleanService.selectColsByTableName(colClean);
        return getDataTable(list);
    }

    @RequiresPermissions("baseclean:tDataRule:view")
    @GetMapping("tobind/{owner}/{tableName}/{columnName}/{comments}")
    @RequestMapping(value = {"tobind/{owner}/{tableName}/{columnName}/{comments}","tobind/{owner}/{tableName}/{columnName}"},method = RequestMethod.GET)
    public String toBindingRules(@PathVariable("owner") String owner,@PathVariable("tableName")String tableName,@PathVariable("columnName")String columnName,@PathVariable(value = "comments",required = false)String comments,ModelMap map)
    {
        /*map.put("owner",owner);
        map.put("tableName",tableName);
        map.put("columnName",columnName);
        map.put("comments",comments);*/
        TDataBinding tDataBinding = new TDataBinding();
        tDataBinding.setOwner(owner);
        tDataBinding.setTableName(tableName);
        tDataBinding.setColName(columnName);
        tDataBinding.setColComments(comments);
        map.put("tDataBinding",tDataBinding);
        return prefix + "/edit";
    }

    /**
     * 修改保存角色
     */
    @RequiresPermissions("baseclean:tDataRule:edit")
    @PostMapping("/relatedRules")
    @ResponseBody
    public AjaxResult editSave(Map<String,Object> params)
    {
        return toAjax(1);
    }

/*    @PostMapping("/listCols")
    @ResponseBody
    public TableDataInfo allocatedList(SysPerson user)
    {
        startPage();
        List<SysPerson> list = userService.selectAllocatedList(user);
        return getDataTable(list);
    }*/

    /*@GetMapping("/tabusers")
    @ResponseBody
    public AjaxResult listUser()
    {
        String account_status = "OPEN";
        String[] users = tableCleanService.selectAllDbUsers(account_status);
        return AjaxResult.success("成功",users);
    }*/


}
